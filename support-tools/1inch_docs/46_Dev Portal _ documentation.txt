Docs
Pricing & Features
Sign In
Overview
APIs
Authentication
Swap APIs
Overview
Cross-Chain Swaps (Fusion+)
Intent Swaps (Fusion)
Introduction
Swagger
Migration
Fusion SDK
Solana SDK
Fusion SDK for EVMs
SDK overview
For integrators
For resolvers
Auction Calculator
Auction Salt
Auction Suffix
WebSocket API
Classic Swap
Orderbook API
History API
Traces API
Portfolio API
Balance API 
Gas Price API
Spot Price API
Token API
NFT API
Transaction Gateway API
Web3 RPC API
Charts API
Domains API
Token Details API
Contracts
FAQ
Becoming a Resolver
Articles
Overview
APIs
Authentication
Swap APIs
Overview
Cross-Chain Swaps (Fusion+)
Intent Swaps (Fusion)
Introduction
Swagger
Migration
Fusion SDK
Solana SDK
Fusion SDK for EVMs
SDK overview
For integrators
For resolvers
Auction Calculator
Auction Salt
Auction Suffix
WebSocket API
Classic Swap
Orderbook API
History API
Traces API
Portfolio API
Balance API 
Gas Price API
Spot Price API
Token API
NFT API
Transaction Gateway API
Web3 RPC API
Charts API
Domains API
Token Details API
Contracts
FAQ
Becoming a Resolver
Auction Salt

Description: encapsulates:

auction start time
duration of an auction
initial rate bump
taker fee
salt (optional parameter to control entropy)

Examples:

import {AuctionSalt} from '@1inch/fusion-sdk'

const salt = new AuctionSalt({
    duration: 180 // in seconds,
    auctionStartTime: 1673548149 // unix timestamp,
    initialRateBump: 50000 // difference between max and min amount in percents, 10000000 = 100%
    bankFee: '0' // in wei
})

salt.build()
// #=> '45118768841948961586167738353692277076075522015101619148498725069326976549864'


Or user can pass optional parameter in constructor to control entropy (be default we use randomInt 10000)

import {AuctionSalt} from '@1inch/fusion-sdk'

// your random generated string
const saltString = myCustomRandFunction()

const salt = new AuctionSalt({
    duration: 180 // in seconds,
    auctionStartTime: 1673548149 // unix timestamp,
    initialRateBump: 50000 // 10000000 = 100%
    bankFee: '0' // in wei,
    salt: saltString
})

salt.build()

static AuctionSalt.decode

Arguments: string

import { AuctionSalt } from "@1inch/fusion-sdk";

const salt = AuctionSalt.decode(
  "45118768841948961586167738353692277076075522015101619148498725069326976549864",
);
// #=> AuctionSalt

Previous
Auction Calculator
Next
Auction Suffix
Â© 2025 1inch Limited
Privacy Policy
Terms of Service
Commercial API Terms of Use